name: Setup Rclone action
description: Setup/Install Rclone for GitHub Actions
branding:
  icon: cloud
  color: blue
inputs:
  rclone_config:
    description: Rclone config file encoded in Base64
    default: false
  disable_base64:
    description: Disable Base64 on config file
    default: false
  version:
    description: Rclone version
    default: latest
  token:
    description: GitHub token to avoid API rate limiting
    default: ${{ github.token }}
    
runs:
  using: composite
  steps:
    - name: Get Rclone version for Unix-like
      id: version-unix-like
      if: runner.os == 'Linux' || runner.os == 'macOS'
      shell: bash
      run: $GITHUB_ACTION_PATH/scripts/version/Unix-like.sh
      env:
        version: ${{ inputs.version }}
        GITHUB_TOKEN: ${{ inputs.token }}
        
    - name: Get Rclone version for Windows
      id: version-windows
      if: runner.os == 'Windows'
      shell: pwsh
      run: '& $env:GITHUB_ACTION_PATH\scripts\version\Windows.ps1'
      env:
        version: ${{ inputs.version }}
        GITHUB_TOKEN: ${{ inputs.token }}
        
    - name: Restore Rclone cache
      id: cache
      uses: actions/cache/restore@main
      with:
        path: ${{ runner.tool_cache }}/Rclone
        key: Rclone-${{ steps.version-unix-like.outputs.version || steps.version-windows.outputs.version }}-${{ runner.os }}-${{ runner.arch }}
        
    - name: Download Rclone for Unix-like
      if: (runner.os == 'Linux' || runner.os == 'macOS') && (! steps.cache.outputs.cache-hit || steps.cache.outputs.cache-hit == 'false')
      shell: bash
      working-directory: ${{ runner.temp }}
      run: $GITHUB_ACTION_PATH/scripts/download/Unix-like.sh
      env:
        version: ${{ steps.version-unix-like.outputs.version }}
        
    - name: Download Rclone for Windows
      if: runner.os == 'Windows' && (! steps.cache.outputs.cache-hit || steps.cache.outputs.cache-hit == 'false')
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: '& $env:GITHUB_ACTION_PATH\scripts\download\Windows.ps1'
      env:
        version: ${{ steps.version-windows.outputs.version }}
        
    - name: Install Rclone on tool cache
      uses: AnimMouse/tool-cache@main
      with:
        folder_name: Rclone
        cache_hit: ${{ steps.cache.outputs.cache-hit }}
        
    - name: Sign in to Rclone using Rclone config on Unix-like
      if: (runner.os == 'Linux' || runner.os == 'macOS') && inputs.rclone_config != 'false'
      shell: bash
      run: $GITHUB_ACTION_PATH/scripts/sign-in/Unix-like.sh
      env:
        rclone_config: ${{ inputs.rclone_config }}
        disable_base64: ${{ inputs.disable_base64 }}
        
    - name: Sign in to Rclone using Rclone config on Windows
      if: runner.os == 'Windows' && inputs.rclone_config != 'false'
      shell: pwsh
      run: '& $env:GITHUB_ACTION_PATH\scripts\sign-in\Windows.ps1'
      env:
        rclone_config: ${{ inputs.rclone_config }}
        disable_base64: ${{ inputs.disable_base64 }}
        
    - name: Save Rclone cache
      if: "! steps.cache.outputs.cache-hit || steps.cache.outputs.cache-hit == 'false'"
      uses: actions/cache/save@main
      with:
        path: ${{ runner.tool_cache }}/Rclone
        key: Rclone-${{ steps.version-unix-like.outputs.version || steps.version-windows.outputs.version }}-${{ runner.os }}-${{ runner.arch }}
